<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.demo.dao.login.LoginMapper" >
  <resultMap id="BaseResultMap" type="com.demo.entity.login.Login" >
    <result column="user" property="user" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="ID" property="id" jdbcType="BIGINT" />
    <result column="employeeId" property="employeeid" jdbcType="VARCHAR" />
    <result column="employeename" property="employeename" jdbcType="VARCHAR" />
    <result column="chinesename" property="chinesename" jdbcType="VARCHAR" />
    <result column="role" property="role" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="birthday" property="birthday" jdbcType="TIMESTAMP" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="entrytime" property="entrytime" jdbcType="TIMESTAMP" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="updatetime" property="updatetime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    user, password, ID, employeeId, employeename, chinesename, role, state, sex, birthday, 
    email, phone, entrytime, createtime, updatetime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.demo.entity.login.LoginExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from login
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.demo.entity.login.LoginExample" >
    delete from login
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.demo.entity.login.Login" >
    insert into login (user, password, ID, 
      employeeId, employeename, chinesename, 
      role, state, sex, birthday, 
      email, phone, entrytime, 
      createtime, updatetime)
    values (#{user,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{id,jdbcType=BIGINT}, 
      #{employeeid,jdbcType=VARCHAR}, #{employeename,jdbcType=VARCHAR}, #{chinesename,jdbcType=VARCHAR}, 
      #{role,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, #{birthday,jdbcType=TIMESTAMP}, 
      #{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{entrytime,jdbcType=TIMESTAMP}, 
      #{createtime,jdbcType=TIMESTAMP}, #{updatetime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.demo.entity.login.Login" >
    insert into login
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="user != null" >
        user,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="id != null" >
        ID,
      </if>
      <if test="employeeid != null" >
        employeeId,
      </if>
      <if test="employeename != null" >
        employeename,
      </if>
      <if test="chinesename != null" >
        chinesename,
      </if>
      <if test="role != null" >
        role,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="entrytime != null" >
        entrytime,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="updatetime != null" >
        updatetime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="user != null" >
        #{user,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="employeeid != null" >
        #{employeeid,jdbcType=VARCHAR},
      </if>
      <if test="employeename != null" >
        #{employeename,jdbcType=VARCHAR},
      </if>
      <if test="chinesename != null" >
        #{chinesename,jdbcType=VARCHAR},
      </if>
      <if test="role != null" >
        #{role,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="entrytime != null" >
        #{entrytime,jdbcType=TIMESTAMP},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.demo.entity.login.LoginExample" resultType="java.lang.Integer" >
    select count(*) from login
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update login
    <set >
      <if test="record.user != null" >
        user = #{record.user,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.employeeid != null" >
        employeeId = #{record.employeeid,jdbcType=VARCHAR},
      </if>
      <if test="record.employeename != null" >
        employeename = #{record.employeename,jdbcType=VARCHAR},
      </if>
      <if test="record.chinesename != null" >
        chinesename = #{record.chinesename,jdbcType=VARCHAR},
      </if>
      <if test="record.role != null" >
        role = #{record.role,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null" >
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null" >
        birthday = #{record.birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.entrytime != null" >
        entrytime = #{record.entrytime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createtime != null" >
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatetime != null" >
        updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update login
    set user = #{record.user,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      ID = #{record.id,jdbcType=BIGINT},
      employeeId = #{record.employeeid,jdbcType=VARCHAR},
      employeename = #{record.employeename,jdbcType=VARCHAR},
      chinesename = #{record.chinesename,jdbcType=VARCHAR},
      role = #{record.role,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=VARCHAR},
      birthday = #{record.birthday,jdbcType=TIMESTAMP},
      email = #{record.email,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      entrytime = #{record.entrytime,jdbcType=TIMESTAMP},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      updatetime = #{record.updatetime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <update id="changeInf" parameterType="com.demo.entity.login.Login">
    UPDATE login
    <set>
      <if test="password != null and  password != ''">
        password=#{password} ,
      </if>
      <if test="id != null and id  != ''">
        id=#{id},
      </if>
      <if test="employeeid != null and  employeeid != ''">
        employeeid=#{employeeid},
      </if>
      <if test="employeename != null and  employeename != ''">
        employeename=#{employeename},
      </if>
      <if test="chinesename != null and  chinesename != ''">
        chinesename=#{chinesename},
      </if>
      <if test=" role != null and  role != ''">
        role=#{role},
      </if>
      <if test="state != null and state  != ''">
        state=#{state},
      </if>
      <if test="sex != null and  sex != ''">
        sex=#{sex},
      </if>
      <if test="birthday != null and   birthday!= ''">
        birthday=#{birthday},
      </if>
      <if test="email != null and   email!= ''">
        email=#{email},
      </if>
      <if test="phone != null and   phone!= ''">
        phone=#{phone},
      </if>
      <if test="entrytime != null and   entrytime!= ''">
        entrytime=#{entrytime},
      </if>
      <if test="createtime != null and   createtime!= ''">
        createtime=#{createtime},
      </if>
      <if test="updatetime != null and   updatetime!= ''">
        updatetime=#{updatetime},
      </if>
    </set>
    where user=#{user}
  </update>

  <select id="findAll" resultType="com.demo.entity.login.Login">
    select * from login where email="1"
  </select>

  <select id="findAllByPage" parameterType="com.demo.test.fenye.PageBean" resultType="com.demo.entity.login.Login">
    SELECT * FROM login limit #{currentPage},#{pageSize};
  </select>


  <sql id="login_where">
    <where>
      <if test="id != null and id != ''">
        and id=#{id}
      </if>
      <if test="employeeid != null and employeeid != ''">
        and employeeid=#{employeeid}
      </if>
      <if test="employeename != null and employeename != ''">
        and employeename like '%${employeename}%'
      </if>
      <if test="role != null and role != ''">
        and role=#{role}
      </if>
      <if test="1==1">
        AND email="1"
      </if>
    </where>
  </sql>
  <select id="findByQuery" parameterType="com.demo.entity.login.peopleQuery" resultType="com.demo.entity.login.Login">
    SELECT * FROM login <include refid="login_where"></include>
  </select>
  <!--<select id="findEpicByQueryVo" parameterType="com.demo.entity.epicInf.QueryVo" resultType="com.demo.entity.epicInf.Epic">-->
    <!--select * from epic <include refid="epic_where"></include>-->

  <!--</select>-->



  <update id="updateById" parameterType="com.demo.entity.login.Login">
    UPDATE login
    <set>
      <if test="password != null and  password != ''">
        password=#{password} ,
      </if>
      <if test="user != null and user  != ''">
        user=#{user},
      </if>
      <if test="employeeid != null and  employeeid != ''">
        employeeid=#{employeeid},
      </if>
      <if test="employeename != null and  employeename != ''">
        employeename=#{employeename},
      </if>
      <if test="chinesename != null and  chinesename != ''">
        chinesename=#{chinesename},
      </if>
      <if test=" role != null and  role != ''">
        role=#{role},
      </if>
      <if test="state != null and state  != ''">
        state=#{state},
      </if>
      <if test="sex != null and  sex != ''">
        sex=#{sex},
      </if>
      <if test="birthday != null">
        birthday=#{birthday},
      </if>
      <if test="email != null and   email!= ''">
        email=#{email},
      </if>
      <if test="phone != null and   phone!= ''">
        phone=#{phone},
      </if>
      <if test="entrytime != null">
        entrytime=#{entrytime},
      </if>
      <if test="createtime != null">
        createtime=#{createtime},
      </if>
      <if test="updatetime != null">
        updatetime=#{updatetime},
      </if>
    </set>
    where id=#{id};
  </update>

<select id="findById" parameterType="Long" resultType="com.demo.entity.login.Login">
  SELECT * FROM login where id=#{id};
</select>

  <insert id="insertInto" parameterType="com.demo.entity.login.Login">
    INSERT INTO login values(#{user},#{password},#{id},#{employeeid},
    #{employeename},#{chinesename},#{role},#{state},#{sex},#{birthday},
    #{email},#{phone},#{entrytime},#{createtime},#{updatetime});
  </insert>

  <update id="updateByUser" parameterType="com.demo.entity.login.User">
    UPDATE login SET password=#{password} where user=#{user};
  </update>

  <select id="findByEmployeeid" parameterType="String" resultType="com.demo.entity.login.Login">
    select * from login where employeeID=#{employeeid};
  </select>

</mapper>